<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\DataBaseDesign.Model\\DataBaseDesignModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using System;
using System.IO;
using DataBaseDesign.IDal;
using DataBaseDesign.Common;

namespace DataBaseDesign.DalFactory
{
	internal partial class DalSession
	{
		// 读取默认的本地文件
        private static readonly string _AssemblyUrl = "DataBaseDesign.Dal.dll";
<#
// Emit Entity Types
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		/// <summary>
        /// 获得I<#=entity.Name#>Dal的实例
        /// </summary>
		public I<#=entity.Name#>Dal Get<#=entity.Name#>Dal
		{
			get
			{
				 return CreatInstanceHelp.CreatInstanceByUrlOnlyUserAssemblyName<I<#=entity.Name#>Dal>(_AssemblyUrl, "DataBaseDesign.Dal.<#=entity.Name#>Dal");
			}
		}	
<#}#>
	}
}